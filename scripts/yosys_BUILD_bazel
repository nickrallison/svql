load("@rules_foreign_cc//foreign_cc:defs.bzl", "cmake")

package(default_visibility = ["//visibility:public"])

# ---------------------------------------------------------------------------
# Header‐only dependency that Yosys (and ABC) need
# ---------------------------------------------------------------------------
cc_library(
    name = "cxxopts_header",
    hdrs = ["libs/cxxopts/include/cxxopts.hpp"],
    visibility = ["//visibility:public"],
)

# ----------------------------------------------------------------------------
# 1.  Stand-alone ABC build
# ----------------------------------------------------------------------------
#
# Upstream ABC produces the following artefacts that we want Bazel to know
# about:
#   • abc               – the command-line binary
#   • libabc.a          – non-PIC static library
#   • libabc-pic.a      – PIC static library (produced by upstream build)
#
# By giving those files in the *out_* lists rules_foreign_cc will collect them
# and expose a proper CcInfo provider, so any other Bazel target can depend on
# “//yosys:abc”.
# ----------------------------------------------------------------------------
filegroup(
    name = "abc_srcs",
    srcs = glob(
        ["abc/**"],
        exclude = ["abc/BUILD.bazel"],  # if someone adds one later
    ),
)

cmake(
    name             = "abc",
    lib_source       = ":abc_srcs",
    # build_args       = ["--parallel", "32"],
    out_binaries     = ["abc"],
    out_static_libs  = [
        "libabc.a",
    ],
)

# Handy alias in case a caller prefers a more explicit name.
alias(
    name   = "abc_cmake",
    actual = ":abc",
)

# ----------------------------------------------------------------------------
# 2.  Full Yosys build (unchanged, except for the optional dependency on ABC
#     should you want Bazel to pull ABC in automatically).
# ----------------------------------------------------------------------------
filegroup(
    name = "srcs",
    srcs = glob(
        ["**/*"],
        exclude = [
            "BUILD.bazel",
            "libs/cxxopts/**",   # provided by :cxxopts_header
        ],
    ),
)

cmake(
    name            = "yosys",
    lib_source      = ":srcs",
    deps            = [
        ":cxxopts_header",
        ":abc",   # uncomment if you want Bazel always to build ABC first
    ],
    # build_args       = ["--parallel", "32"],
    out_binaries    = ["yosys", "yosys-config"],
    out_shared_libs = ["libyosys.so"],
)

# Convenience target used by some examples / tests
alias(
    name   = "test_example",
    actual = "//scripts:test_svql_driver",
)