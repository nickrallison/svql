load("@rules_rust//rust:defs.bzl", "rust_library", "rust_test")
load("@rules_rust//rust:repositories.bzl", "rust_toolchain_tools_repository")
load("@bazel_skylib//rules:run_binary.bzl", "run_binary")

alias(
    name = "cbindgen",
    actual = "@crate_index_cargo_bindeps//:cbindgen__cbindgen",
    tags = ["manual"],
)

genrule(
    name = "header",
    srcs = glob(["src/**/*.rs"]) + [
        "Cargo.toml",
        "//:Cargo.lock",
    ],
    outs = ["include/source.h"],
    tools = [":cbindgen"],
    cmd = """
        $(location :cbindgen) \\
            --lang C \\
            --output $(location include/source.h) \\
            svql_common
    """,
    visibility = ["//visibility:public"],
)

rust_library(
    name = "svql_common",
    crate_root = "src/lib.rs",
    srcs = glob(["src/**/*.rs"]),
    edition = "2024",
    deps = [
        "@crates//:lazy_static",
        "@crates//:regex",
    ],
    crate_features = [],
    visibility = ["//visibility:public"],
)

cc_library(
    name = "ffi",
    hdrs = [":header"],
    deps  = [":svql_common"],
    visibility = ["//visibility:public"],
)